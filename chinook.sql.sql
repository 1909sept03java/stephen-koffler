    SELECT * FROM EMPLOYEE;
/
SELECT * FROM GENRE;
/
SELECT * from  EMPLOYEE WHERE LASTNAME = 'King';
/
SELECT * FROM employee WHERE FIRSTNAME = 'Andrew' AND REPORTSTO IS NULL;
/
SELECT * FROM ALBUM ORDER BY TITLE DESC;
/
SELECT FIRSTNAME FROM CUSTOMER ORDER BY CITY ASC
/
INSERT INTO GENRE VALUES (27, 'RUSSIAN');
/

INSERT INTO EMPLOYEE(EMPLOYEEID, LASTNAME, FIRSTNAME) VALUES (1000, 'KOFFLER', 'STEPHEN');
/

UPDATE CUSTOMER SET FIRSTNAME = 'Robert', LASTNAME = 'Walter' WHERE FIRSTNAME = 'Aaron';
/
SELECT * FROM INVOICE WHERE BILLINGADDRESS LIKE 'T%';
/


ALTER TABLE INVOICE
ADD CONSTRAINT FK_CUSTOMER
  FOREIGN KEY (CUSTOMERID)
  REFERENCES CUSTOMER(CUSTOMERID)
  ON DELETE CASCADE;
/

--DELETE FROM CUSTOMER WHERE FIRSTNAME = 'Robert' AND LASTNAME = 'Walter';

CREATE OR REPLACE PROCEDURE SP_LISTALL 
AS
S SYS_REFCURSOR;
BEGIN
    OPEN S FOR
    SELECT FIRSTNAME, LASTNAME FROM EMPLOYEE;
    --DBMS_SQL.RETURN_RESULTS(S);
END;
/
EXECUTE SP_LISTALL;
/
SELECT LASTNAME, 

SELECT INVOICE.INVOICEID, CUSTOMER.LASTNAME 
FROM INVOICE
INNER JOIN CUSTOMER
ON INVOICE.CUSTOMERID = CUSTOMER.CUSTOMERID;
/

SELECT customer.customerid, CUSTOMER.FIRSTNAME, CUSTOMER.LASTNAME, INVOICE.INVOICEID, INVOICE.TOTAL
FROM CUSTOMER LEFT OUTER JOIN INVOICE
ON CUSTOMER.CUSTOMERID = INVOICE.INVOICEID;
/
