CREATE TABLE EMPLOYEE(EEID NUMBER , FNAME VARCHAR2(20));
/
ALTER TABLE EMPLOYEE RENAME COLUMN EEID TO EMPLOYEE_ID;
/
ALTER TABLE EMPLOYEE RENAME COLUMN FNAME TO EMP_FIRSTNAME;
/
ALTER TABLE EMPLOYEE ADD EMP_LASTNAME VARCHAR2(20);
/
ALTER TABLE EMPLOYEE ADD DEPARTMENT_ID INT ;
/
ALTER TABLE EMPLOYEE ADD SALARY NUMBER ;
/
ALTER TABLE EMPLOYEE ADD EMP_EMAIL VARCHAR2(35);
/
CREATE TABLE DEPARTMENT (DEPARTMENT_ID INT, DEPARTMENT_NAME VARCHAR2(25));
/
ALTER TABLE EMPLOYEE ADD PRIMARY KEY (EMPLOYEE_ID);
/
ALTER TABLE DEPARTMENT ADD PRIMARY KEY (DEPARTMENT_ID);
/
ALTER TABLE EMPLOYEE ADD FOREIGN KEY (DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID);
/
CREATE SEQUENCE SQ_EMPLOYEE_PK
START WITH 1000
INCREMENT BY 1;
/

CREATE SEQUENCE SQ_DEPARTMENT_PK
START WITH 100
INCREMENT BY 10;
/
CREATE OR REPLACE TRIGGER TR_INSERT_DEPARTMENT
BEFORE INSERT ON DEPARTMENT
FOR EACH ROW
BEGIN
    SELECT SQ_DEPARTMENT_PK.NEXTVAL INTO :NEW.DEPARTMENT_ID FROM DUAL;
END;
/
ALTER TABLE EMPLOYEE ADD PRIMARY KEY (EMPLOYEE_ID);
/
INSERT INTO DEPARTMENT (DEPARTMENT_NAME) VALUES ('ACCOUNTING');
/
INSERT INTO DEPARTMENT (DEPARTMENT_NAME) VALUES ('LEGAL');
/
INSERT INTO DEPARTMENT (DEPARTMENT_NAME) VALUES ('MARKETING');
/
INSERT INTO EMPLOYEE (emp_firstname, emp_lastname, department_id, salary, emp_email) VALUES ('STEPHEN', 'KOFFLER', 110, 50000, 'stephenkoffler@gmail.com' );
/
INSERT INTO EMPLOYEE (emp_firstname, emp_lastname, department_id, salary, emp_email) VALUES ('joe', 'smith', 100, 55000, 'joesmith@gmail.com' );
/
INSERT INTO EMPLOYEE (emp_firstname, emp_lastname, department_id, salary, emp_email) VALUES ('Bob', 'Jones', 120, 57000, 'bobjones@gmail.com' );
/
INSERT INTO EMPLOYEE (emp_firstname, emp_lastname, department_id, salary, emp_email) VALUES ('Betsey', 'Johnson', 100, 60000, 'betseyj@gmail.com' );
/
INSERT INTO EMPLOYEE (emp_firstname, emp_lastname, department_id, salary, emp_email) VALUES ('Kim', 'Vaccaro', 120, 56000, 'kvaccaro@gmail.com' );
/
INSERT INTO EMPLOYEE (emp_firstname, emp_lastname, department_id, salary, emp_email) VALUES ('Pat', 'Nelson', 100, 55500, 'pn@gmail.com' );
/
CREATE OR REPLACE PROCEDURE SP_GIVE_RAISE (D_ID IN NUMBER, NEW_AVG OUT NUMBER)
IS
--VARIABLE DECLARATON
AVG_SAL NUMBER;
BEGIN
    UPDATE EMPLOYEE SET SALARY = (SALARY * 1.1) WHERE EMPLOYEE.DEPARTMENT_ID = D_ID;
    SELECT AVG(SALARY)INTO AVG_SAL FROM EMPLOYEE WHERE DEPARTMENT_ID = D_ID;
   -- DBMS_OUT.PUT_LINE('The new average salary for this department is '||AVG_SAL);
    
END;
/
